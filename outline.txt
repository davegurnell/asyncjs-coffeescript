## Part 2: Little treasures

- FAT ARROW
  - Take simple -> function and convert to => - CS introduces "_this" variable

- DESTRUCTURING SYNTAX
  - Described really well on the Coffeescript site
  - Use in assignment
      futurists =
        sculptor: "Umberto Boccioni"
        painter:  "Vladimir Burliuk"
        poet:
          name:   "F.T. Marinetti"
          address: [
            "Via Roma 42R"
            "Bellagio, Italy 22021"
          ]

      {poet: {name, address: [street, city]}} = futurists

  - Use in function definitions

  - Use with splats
      tag = "<impossible>"
      [open, contents..., close] = tag.split("")

- THE EXISTENTIAL OPERATOR
  - Plain form 'a?'
    - Returns true unless variable is null or undefined
    - As distinguished from JS if/||, which are confused by "falsy" values such as false and 0
  - Assignment form '?='
  - Accessor form '?.'

- CLASSES and INHERITANCE
  - What does inheritance get you?
    - Data hiding
    - Functionality overloading
    - Polymorphism
    - WHAT ELSE
  - WHICH OF THESE ARE POSSIBLE IN COFFEESCRIPT/JAVASCRIPT ??
  - Prototype-based inheritance versus class-based inheritance


## Part 3: Gotchas

- EFFING SYNTAX
  - e.g. function calls - when can you omit parens, when can you have a newline, when can't you
  - you *do* get used to it, but it's a bit hit and miss at first
  - helps to have an editor that compiles snippets of coffeescript
    - "CoffeeCompile" plugin for Sublime Text
    - Alternatively, just sit there with Coffeescript.org open in your browser !!

- VARIABLE SHADOWING

- ANONYMOUS FUNCTION NAMES IN DEBUGGING OUTPUT

- DEBUGGING AND SOURCE MAPS

## Part 4: Tools

- Coffee command line

- Jitter

- Grunt

- Coffeescript in the web page

  * The agenda
  * Following along at home...
* Part 1: Hello World
  * Variables 1
    - Coffeescript auto-declares variables
  * Variables 2
  * Variables 3
  * Conditionals
  * Loops and conditionals
  * Functions
    - Thin-arrow syntax
    - Bracketless function call syntax
    - Using this for jQuery event handling
* Big Features
  * Expressions
    - String interpolation
    - Every expression has a return value
    - Functional programming with Underscore.js
    - The existential operator
  * Functions
    - Short function syntax
    - Binding function syntax
  * Classes and objects
    - Prototype-based vs class-based inheritance
    - Syntax
    - UI programming with Backbone.js
  * Existential operator
- Downsides
  - Automatic variable declaration
    - Typos
    - Variable shadowing
  - Debugging compiled code
    - Is it *actually* that hard?
    - Source maps