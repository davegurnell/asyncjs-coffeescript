## Part 3: Gotchas

- EFFING SYNTAX
  - e.g. function calls - when can you omit parens, when can you have a newline, when can't you
  - you *do* get used to it, but it's a bit hit and miss at first
  - helps to have an editor that compiles snippets of coffeescript
    - "CoffeeCompile" plugin for Sublime Text
    - Alternatively, just sit there with Coffeescript.org open in your browser !!

- VARIABLE SHADOWING

- ANONYMOUS FUNCTION NAMES IN DEBUGGING OUTPUT

- DEBUGGING AND SOURCE MAPS

## Part 4: Tools

- Coffee command line

- Jitter

- Grunt

- Coffeescript in the web page
- Downsides
  - Automatic variable declaration
    - Typos
    - Variable shadowing
  - Debugging compiled code
    - Is it *actually* that hard?
    - Source maps

REFERENCES

Comparison of Coffeescript and ECMAScript.next
    http://brendaneich.com/tag/javascript-ecmascript-harmony-coffeescript/

    How "new" works
    http://stackoverflow.com/questions/6750880/javascript-how-does-new-work-internally

How the "prototype" property works
    http://stackoverflow.com/questions/572897/how-does-javascript-prototype-work

Coffeescript classes under the hood
    http://www.jimmycuadra.com/posts/coffeescript-classes-under-the-hood

THE FUTURE

ECMAScript 6 ??
 - When and how?
 - Initially by cross-compilation
 - Very similar process to Coffeescript - write ES6, deploy earlier JS
 - Might as well get used to it now - source maps etc
